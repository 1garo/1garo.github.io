<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech on 1garo</title><link>https://1garo.github.io/categories/tech/</link><description>Recent content in Tech on 1garo</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 07 Mar 2023 16:00:00 -0300</lastBuildDate><atom:link href="https://1garo.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>why you should use zod as your validator</title><link>https://1garo.github.io/posts/why-you-should-use-zod/</link><pubDate>Tue, 07 Mar 2023 16:00:00 -0300</pubDate><guid>https://1garo.github.io/posts/why-you-should-use-zod/</guid><description>The title is just to bring some attention, I know, you use what you want, but today I&amp;rsquo;ll be giving some insights on zod, from someone using it daily for the last 6-8 months.
Let&amp;rsquo;s say that you have an express api with an /user endpoint.
// src/routes.ts import { Router } from &amp;#39;express&amp;#39;; import user from &amp;#39;@/controller/user.controller&amp;#39;; const router = Router(); router.post(&amp;#39;/user&amp;#39;, user.create); You usually would do something like the example below, but as we can see, we lack typing inference, type validation and a lot other things.</description></item></channel></rss>